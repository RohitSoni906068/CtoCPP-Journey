# PRACTICE QUESTIONS BASED ON RECURSION
=======================================

BASIC RECURSION PROBLEMS
------------------------
1. Write a recursive function to print "Hello World" a given number of times.

2. Write a recursive function to calculate and print the factorial of a given number.

3. Write a recursive function to print the factorials of all natural numbers from 1 to n.

4. Write a recursive function to print numbers in decreasing order from x down to 1.

5. Write a recursive function to print numbers from startNum down to stopNum.

6. Write a recursive function to print numbers from 1 to N in increasing order.

7. Write a recursive function to print numbers from 'start' to 'end' in increasing order.

8. Write a recursive function to print numbers from 1 to n.

9. Write a recursive function to print numbers from n down to 1, and then from 1 back up to n.

ARITHMETIC OPERATIONS USING RECURSION
-------------------------------------
10. Write a recursive function to calculate the sum of the first n natural numbers.

11. Write a recursive function to calculate the sum of numbers from 'start' to 'end' (parameterized version).

12. Write a recursive function to calculate the sum of numbers from 'start' to 'end'.

13. Write a recursive function to calculate 'base' raised to the power 'exponent'.

14. Write a recursive function to calculate base^exponent using logarithmic time complexity.

FIBONACCI AND SEQUENCE PROBLEMS
-------------------------------
15. Write a recursive function to calculate the nth Fibonacci number.

16. Write a program to print the Fibonacci sequence from 0 to n using recursion.

17. Write a program to calculate the sum of Fibonacci numbers from 0 to n.

FACTORIAL-RELATED PROBLEMS
--------------------------
18. Write a program to calculate the sum of factorials from 1 to n.

DYNAMIC PROGRAMMING WITH RECURSION
----------------------------------
19. Write a program to find the number of ways to climb 'n' stairs, where one can take either 1 or 2 steps at a time.

20. Write a program to find the number of ways to climb 'n' stairs, where one can take 1, 2, or 3 steps at a time.

GRID PATH PROBLEMS
------------------
21. Write a recursive function to compute the number of distinct paths in a grid from a starting point to an endpoint,
moving only right or down (parameterized version).

22. Write a recursive function to compute the total number of unique paths from the top-left corner to the,
bottom-right corner of a grid with given rows and columns. Only rightward and downward moves are allowed.

PATTERN PRINTING USING RECURSION
--------------------------------
23. Write a recursive function to print a Zig-Zag pattern.
    Example:
    Input: 2
    Output: 2 1 1 1 2 1 1 1 2

24. Write a recursive function to print a Zig-Zag pattern for the first N natural numbers.

ADVANCED RECURSION PROBLEMS
---------------------------
25. Write a recursive function to solve the Tower of Hanoi puzzle.