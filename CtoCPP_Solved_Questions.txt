# Basics Of C++ Programming Practice Questions
============================================

1. Write a program to calculate the sum of two given numbers.

2. Take a number (n) from the user and output its cube (n³).

3. Write a program to calculate the perimeter of a square when the side length is given.

4. Write a program to calculate the perimeter of a rectangle when length and breadth are given by the user.

5. Write a program to calculate the area of a rectangle when length and breadth are given by the user.

6. Write a program to calculate the area of a square when the side length is given.

7. Write a program to calculate the area of a circle when the radius is given by the user.

8. Write a program to calculate the circumference of a circle when the radius is given by the user.

9. Write a program to calculate the percentage for 5 subjects, considering marks out of 100 for each subject.

10. Calculate simple interest when principal, rate, and time are given by the user.

11. Take two integer inputs, a and b (where a > b), and find the remainder when a is divided by b without using the modulus operator (%).

12. Take two integer inputs, a and b (where a > b), and find the remainder when a is divided by b using the modulus operator (%).

13. Write a program to print half of a given number.

14. Take a float input and print the integer part of the real number.

15. Write a program to calculate the volume of a cylinder given its radius and height.

16. Write a program to calculate the volume of a sphere when the radius is given by the user.

17. Write a program to convert temperature from Celsius to Fahrenheit.

18. Write a program to convert temperature from Celsius to Kelvin.

19. Write a program to convert temperature from Fahrenheit to Celsius.

20. Write a program to convert temperature from Fahrenheit to Kelvin.

21. Write a program to convert temperature from Kelvin to Celsius.

22. Write a program to convert temperature from Kelvin to Fahrenheit.


# If-Else Practice Questions
============================

1. Given a person's age, determine if they are eligible for a driving license.

2. Take a positive integer as input and determine if it is a three-digit number.

3. Take an integer as input and print its absolute value.

4. Write a program to calculate and print the average of 3 numbers.

5. Given the length and breadth of a rectangle, write a program to determine whether,
the area of the rectangle is greater than its perimeter.

6. Write a program to check if a given character is a digit.

7. Write a program to determine whether a character entered by the user is lowercase.

8. Take a positive integer as input and determine if it is even or odd.

9. Take a dividend and divisor as input from the user and check if the dividend is divisible by the divisor.

10. Take a positive integer as input and determine if it is divisible by 5.

11. Take a positive integer as input and determine if it is divisible by both 5 and 3 without using nested if statements.

12. Take a positive integer as input and determine if it is divisible by 5 or 3 but not divisible by 15 using nested if statements.

13. Take a positive integer as input and determine if it is divisible by 5 or 3 but not divisible by 15 using logical operators.

14. If the cost price and selling price of an item are input through the keyboard, write a program to determine,
whether the seller has made a profit or incurred a loss. Also calculate the amount of profit made or loss incurred.

15. Take 3 numbers as input and determine if they can form the sides of a triangle using logical operators.

16. Accept a year as input through the keyboard. Write a program to determine whether the year is a leap year or not.
(Consider that leap years occur every 4 years)

17. Take a student's percentage as input and print the corresponding grade using nested if statements:
    • 90 - 100: Excellent
    • 80 - 89: Very Good
    • 70 - 79: Good
    • 60 - 69: Can Do Better
    • 50 - 59: Average
    • 40 - 49: Below Average
    • Below 40: Fail

18. Take 3 positive integers as input and print the greatest among them using nested if statements.

19. Calculate the income tax paid by an employee to the government according to the following tax slabs:
    Income Slab          Tax Rate
    2.5L - 5.0L         5%
    5.0L - 10.0L        20%
    Above 10.0L         30%

20. Write a program to determine whether a student has passed or failed. To pass, a student requires,
a total of 40% and at least 33% in each subject. Assume there are three subjects with a maximum of 100 marks in each subject.
Take the marks as input from the user.

21. If the ages of Ram, Shyam, and Ajay are input through the keyboard, write a program to determine,
the youngest of the three using logical operators and nested if statements.

22. Write a program to find the minimum of two numbers.

23. Write a program to find the maximum of two numbers.

24. Write a program to find the greatest among four numbers entered by the user using the max/min algorithm.


# PRACTICE PROBLEMS BASED ON LOOPS
==================================

1. Print "Hello World" 'n' times, where 'n' is input from the user.

2. Print all numbers within a given range.

3. Program to print natural numbers from R (start) to S (end), excluding numbers in the range from I (skip start) to K (skip end).

4. Print all odd numbers from R to S (both values provided by the user).

5. Program to print odd numbers from a user-defined range (R to S) using 'continue' statements.

6. Print the multiplication table of N (given by user).

7. Program to print the multiplication table of a user-given number in reverse order.

8. Write a program to print the multiplication table of 'n' and calculate the sum of all products in the table.

9. Program to calculate the sum of numbers from R to S using a while loop.

10. Program to calculate the sum of numbers within a given range using a while loop.

11. Print all even numbers within a given range.

12. Write a program to print all ASCII values and their equivalent characters from 'A' to 'Z'
(characters can be uppercase or lowercase as specified by user) using a for loop.

13. Write a program to print all ASCII values and their equivalent characters from 'A' to 'Z' 
(characters can be uppercase or lowercase as specified by user) using a for loop.

14. Program to calculate the factorial of a given number.

15. Print the factorial of all numbers within a given range.

16. Write a program to print the nth term of the Fibonacci series.

17. Write a program to print the Fibonacci series from the first term to the nth term.

18. Display the arithmetic progression: 1, 3, 5, 7, 9, ... up to 'n' terms.

19. Display the arithmetic progression: 4, 7, 10, 13, 16, ... up to 'n' terms.

20. Display the geometric progression: 1, 2, 4, 8, 16, 32, ... up to 'n' terms.

21. Display the geometric progression: 3, 12, 48, ... up to 'n' terms.

22. Display the geometric progression: 100, 50, 25, ... up to 'n' terms.

23. Display the arithmetic progression: 100, 97, 94, ... down to the last positive term, with 'n' starting terms.

24. Program to calculate the result of raising one number to the power of another.

25. Program to check if a number is prime or composite.

26. Write a program to check whether a given number is prime or not using while loops.

27. Write a program to print all prime numbers within a given range.

28. Calculate the sum of the series: 1 - 2 + 3 - 4 + 5 - 6 + ... up to 'n' terms.

29. Calculate the sum of the series: -1 + 2 - 3 + 4 - 5 + 6 - ... up to 'n' terms.

30. Write a program to count the digits of a given number.

31. Program to print the reverse of a given number.

32. Program to calculate the sum of digits of a given number.

33. Program to print the sum of all even digits of a given number.

34. Program to print the sum of all odd digits of a given number.

35. Write a program to print the sum of digits of a given number plus the sum of digits of its reverse.

36. Write a program to print the sum of a number 'n' and its reverse.

37. Keep taking numbers as input from the user until an odd number is entered.

38. Continuously take input from the user until a number that is a multiple of 7 is entered.

39. Program to check whether a given number is a palindrome.

40. Write a program to check if the number entered by the user is an Armstrong number.

41. Write a program to print all Armstrong numbers between R (starting value) and S (ending value) as given by the user.


# PATTERN PRINTING PRACTICE PROBLEMS FOR C
==========================================

1. Rectangle Pattern with Asterisks
Write a program to print a rectangle pattern using asterisks.
Example : rows = 3, columns = 4
Expected Output:
* * * * *
* * * * *
* * * * *

2. Square Star Pattern
Write a program to print a square pattern using asterisks.
Example : dimension = 4
Expected Output:
* * * *
* * * *
* * * *
* * * *

3. Square Number Pattern
Write a program to print a square pattern using consecutive numbers.
Example : dimension = 4
Expected Output:
1 2 3 4
1 2 3 4
1 2 3 4

4. Left-Aligned Triangle Pattern (Asterisks)
Write a program to print a left-aligned triangle pattern using asterisks.
Example : rows = 4
Expected Output:
*
* *
* * *
* * * *

5. Left-Aligned Inverted Triangle Pattern (Asterisks)
Write a program to print a left-aligned inverted triangle pattern using asterisks.
Example : rows = 4
Expected Output:
* * * *
* * *
* *
*

6. Left-Aligned Triangle Number Pattern
Write a program to print a left-aligned triangle pattern using consecutive numbers.
Example : rows = 4
Expected Output:
1
1 2
1 2 3
1 2 3 4

7. Left-Aligned Inverted Triangle Number Pattern
Write a program to print a left-aligned inverted triangle pattern using consecutive numbers.
Example : rows = 4
Expected Output:
1 2 3 4
1 2 3
1 2
1

8. Left-Aligned Triangle Pattern with Odd Numbers
Write a program to print a left-aligned triangle pattern using odd numbers.
Example : rows = 4
Expected Output:
1
1 3
1 3 5
1 3 5 7

9. Square Alphabet Pattern
Write a program to print a square pattern using consecutive alphabets.
Example : dimension = 4
Expected Output:
A B C D
A B C D
A B C D
A B C D

10. Left-Aligned Triangle Alphabet Pattern
Write a program to print a left-aligned triangle pattern using consecutive alphabets.
Example : rows = 4
Expected Output:
A
A B
A B C
A B C D

11. Alternating Numeric-Alphabetic Triangle Pattern
Write a program to print a triangle pattern alternating between numbers and alphabets.
Example : rows = 5
Expected Output:
1
A B
1 2 3
A B C D
1 2 3 4 5

12. Plus (+) Sign Pattern
Write a program to print a plus (+) sign pattern using asterisks.
Note: The number of rows must be an odd number provided by the user.
Example : rows = 5
Expected Output:
_ _ * _ _
_ _ * _ _
* * * * *
_ _ * _ _
_ _ * _ _

13. Hollow Rectangle Pattern
Write a program to print a hollow rectangle pattern using asterisks.
Example : rows = 4, columns = 5
Expected Output:
* * * * * *
* _ _ _ _ *
* _ _ _ _ *
* * * * * *

14. X Pattern with Stars
Write a program to print an 'X' pattern using asterisks.
Note: The number of rows must be an odd number provided by the user.
Example : rows = 5
Expected Output:
* _ _ _ *
_ * _ * _
_ _ * _ _
_ * _ * _
* _ _ _ *

15. Floyd's Triangle Pattern (Numbers)
Write a program to print Floyd's triangle pattern using consecutive numbers.
Example : rows = 4
Expected Output:
1
2 3
4 5 6
7 8 9 10

16. Floyd's Triangle Pattern (Odd Numbers)
Write a program to print Floyd's triangle pattern using consecutive odd numbers.
Example : rows = 4
Expected Output:
1
3 5
7 9 11
13 15 17 19

17. Alternating Binary Triangle Pattern
Write a program to print the following alternating binary triangle pattern:
Example : rows = 4
Expected Output:
1
0 1
1 0 1
0 1 0 1

18. Right-Aligned Triangle Pattern (Asterisks)
Write a program to print a right-aligned triangle pattern using asterisks.
Example : rows = 4
Expected Output:
_ _ _ *
_ _ * *
_ * * *
* * * *

19. Left-Aligned Rhombus Pattern
Write a program to print a left-aligned rhombus pattern using asterisks.
Example : rows = 4
Expected Output:
_ _ _ * * * *
_ _ * * * *
_ * * * *
* * * *

20. Right-Aligned Triangle Alphabet Pattern
Write a program to print a right-aligned triangle pattern using consecutive alphabets.
Example : rows = 4
Expected Output:
_ _ _ A
_ _ A B
_ A B C
A B C D

21. Centered Star Pyramid Pattern
Write a program to print a centered pyramid pattern using asterisks.
Example : rows = 4
Expected Output:
_ _ _ *
_ _ * * *
_ * * * * *
* * * * * * *

22. Centered Numerical Pyramid Pattern
Write a program to print a centered pyramid pattern using consecutive numbers.
Example : rows = 4
Expected Output:
_ _ _ 1
_ _ 1 2 3
_ 1 2 3 4 5
1 2 3 4 5 6 7

23. Centered Alphabet Pyramid Pattern
Write a program to print a centered pyramid pattern using consecutive alphabets.
Example : rows = 4
Expected Output:
_ _ _ A
_ _ A B C
_ A B C D E
A B C D E F G

24. Centered Numeric Palindrome Pyramid
Write a program to print a centered palindromic pyramid pattern using numbers.
Example : rows = 4
Expected Output:
_ _ _ 1
_ _ 1 2 1
_ 1 2 3 2 1
1 2 3 4 3 2 1

25. Centered Alphabetical Palindrome Pyramid
Write a program to print a centered palindromic pyramid pattern using alphabets.
Example : rows = 4
Expected Output:
_ _ _ A
_ _ A B A
_ A B C B A
A B C D C B A

26. Symmetric Diamond Star Pattern
Write a program to print a symmetric diamond pattern using asterisks.
Example : rows = 4
Expected Output:
_ _ _ *
_ _ * * *
_ * * * * *
* * * * * * *
_ * * * * *
_ _ * * *
_ _ _ *

27. Hollow Inverted Triangle Pattern
Write a program to print the following hollow inverted triangle pattern:
Example : rows = 4
Expected Output:
* * * * * * *
* * * _ * * *
* * _ _ _ * *
* _ _ _ _ _ *

28. Number Pattern with Central Gap
Write a program to print numbers with a central gap pattern:
Example : rows = 4
Expected Output:
1 2 3 4 5 6 7
1 2 3 _ 5 6 7
1 2 _ _ _ 6 7
1 _ _ _ _ _ 7

29. Alphabet Pattern with Central Gap
Write a program to print alphabets with a central gap pattern:
Example : rows = 4
Expected Output:
A B C D E F G
A B C _ E F G
A B _ _ _ F G
A _ _ _ _ _ G

30. Symmetric Hollow Pyramid (Numbers)
Write a program to print a symmetric hollow pyramid using numbers:
Example : rows = 4
Expected Output:
1 2 3 4 3 2 1
1 2 3 _ 3 2 1
1 2 _ _ _ 2 1
1 _ _ _ _ _ 1

31. Left-Triangle Increasing Mirror Pattern
Write a program to print a left-triangle increasing mirror pattern for a given size:
Example : size = 7
Expected Output:
1 1 1 1 1 1 1
1 2 2 2 2 2 2
1 2 3 3 3 3 3
1 2 3 4 4 4 4
1 2 3 4 5 5 5
1 2 3 4 5 6 6
1 2 3 4 5 6 7

32. Diamond Number Pattern (Symmetric)
Write a program to print the following symmetric diamond number pattern:
Example : rows = 4
Expected Output:
1 1 1 1 1 1 1
1 2 2 2 2 2 1
1 2 3 3 3 2 1
1 2 3 4 3 2 1
1 2 3 3 3 2 1
1 2 2 2 2 2 1
1 1 1 1 1 1 1

33. Reverse Diamond Number Pattern
Write a program to print the following reverse diamond number pattern:
Example : rows = 4
Expected Output:
4 4 4 4 4 4 4
4 3 3 3 3 3 4
4 3 2 2 2 3 4
4 3 2 1 2 3 4
4 3 2 2 2 3 4
4 3 3 3 3 3 4
4 4 4 4 4 4 4

NOTES:
- Use underscores (_) to represent spaces in the expected output for clarity
- Ensure proper spacing between characters in your actual program output
- Test your programs with different input sizes where applicable
- Focus on loop logic and pattern recognition while coding


# C++ FUNCTION PRACTICE QUESTIONS
=================================

1. Write a function to print a greeting based on the time of day ("Good Morning", "Good Afternoon", "Good Evening").

2. Write a function that prints "Namaste" if the user is Indian or "Bonjour" if the user is French.

3. Write a function to print the multiplication table of a given number.

4. Write a function to categorize and print weather conditions based on temperature input (Hot, Cold, Moderate).

5. Write a program to find the sum of three numbers using a function.

6. Write a function for each of the following to calculate the sum, product, and average of two numbers.

7. Use a library function to calculate the area of a square with side length 'a'.

8. Write a function to convert temperature from Celsius to Fahrenheit.

9. Write a function to convert temperature from Celsius to Kelvin.

10. Write a function to convert temperature from Fahrenheit to Celsius.

11. Write a function to convert temperature from Fahrenheit to Kelvin.

12. Write a function to convert temperature from Kelvin to Celsius.

13. Write a function to convert temperature from Kelvin to Fahrenheit.

14. Write a function to find the minimum of two numbers.

15. Write a function to find the smallest number among three given numbers (handle equal numbers appropriately).

16. Write functions for each of the following to calculate the area of a circle and a rectangle.

17. Write a function to calculate the gravitational force of attraction on a body of mass 'm' exerted by Earth.

18. Write a function to calculate the factorial of a number.

19. Write a function to display factorials of numbers from 1 to a given limit.

20. Write a function to find the nth Fibonacci number.

21. Write a function to display Fibonacci numbers from the 0th term to the nth term.

22. Write a function to compute the sum of digits of a number.

23. Write a program to print a star pattern using a function (prints first n lines):
    Example : rows = 3
    Expected Output :
    *
    * * *
    * * * * *

24. Write a program to compute combinations (nCr) using the formula: nCr = n! / (r! × (n-r)!)

25. Write a program to compute permutations (nPr) using the formula: nPr = n! / (n-r)!

26. Write a program to print Pascal's Triangle up to a given number of rows.
    Example: If number of rows = 5
    1
    1 1
    1 2 1
    1 3 3 1
    1 4 6 4 1
    1 5 10 10 5 1

27. Write a program to print center-aligned Pascal's Triangle up to a given number of rows.
    Example format:
         1
        1 1
       1 2 1
      1 3 3 1
     1 4 6 4 1
    1 5 10 10 5 1

28. Write a function to swap two given parameters and print them using a temporary variable.

29. Write a function to swap two given parameters without using a temporary variable and print them.

30. Write a function to calculate power using math library functions.

31. Write a function to calculate the result of a base raised to the power of an exponent.

32. Write a function to calculate and display powers of a base from exponent 0 to n.

33. Write a function to compute the Greatest Common Divisor (GCD) of two given numbers.

34. Write a function to find and display the prime factors of a given number.

35. Write a function to calculate square root using the Newton-Raphson method.

36. Write a program to print the first n prime numbers using functions.


# PRACTICE QUESTIONS BASED ON RECURSION
=======================================

1. Write a recursive function to print "Hello World" a given number of times.

2. Write a recursive function to calculate and print the factorial of a given number.

3. Write a recursive function to print the factorials of all natural numbers from 1 to n.

4. Write a recursive function to print numbers in decreasing order from x down to 1.

5. Write a recursive function to print numbers from startNum down to stopNum.

6. Write a recursive function to print numbers from 1 to N in increasing order.

7. Write a recursive function to print numbers from 'start' to 'end' in increasing order.

8. Write a recursive function to print numbers from 1 to n.

9. Write a recursive function to print numbers from n down to 1, and then from 1 back up to n.

10. Write a recursive function to calculate the sum of the first n natural numbers.

11. Write a recursive function to calculate the sum of numbers from 'start' to 'end' (parameterized version).

12. Write a recursive function to calculate the sum of numbers from 'start' to 'end'.

13. Write a recursive function to calculate 'base' raised to the power 'exponent'.

14. Write a recursive function to calculate base^exponent using logarithmic time complexity.

15. Write a recursive function to calculate the nth Fibonacci number.

16. Write a program to print the Fibonacci sequence from 0 to n using recursion.

17. Write a program to calculate the sum of Fibonacci numbers from 0 to n.

18. Write a program to calculate the sum of factorials from 1 to n.

19. Write a program to find the number of ways to climb 'n' stairs, where one can take either 1 or 2 steps at a time.

20. Write a program to find the number of ways to climb 'n' stairs, where one can take 1, 2, or 3 steps at a time.

21. Write a recursive function to compute the number of distinct paths in a grid from a starting point to an endpoint,
moving only right or down (parameterized version).

22. Write a recursive function to compute the total number of unique paths from the top-left corner to the,
bottom-right corner of a grid with given rows and columns. Only rightward and downward moves are allowed.

23. Write a recursive function to print a Zig-Zag pattern.
    Example:
    Input: 2
    Output: 2 1 1 1 2 1 1 1 2

24. Write a recursive function to print a Zig-Zag pattern for the first N natural numbers.

25. Write a recursive function to solve the Tower of Hanoi puzzle.


# PRACTICE QUESTIONS ON ARRAYS IN C PROGRAMMING
==============================================

1. Write a C program that accepts marks for multiple students and prints the roll numbers of students, 
who scored below the passing mark (e.g., 35).

2. Write a program to calculate the sum of all elements in an integer array. 
The user should be prompted to input the array size and its elements.

3. Write a program to calculate the product of all elements in an integer array. 
The user should be prompted to input the array size and its elements.

4. Write a program to store the multiplication table of a given number in an array.

5. Write a program to find the maximum value in a user-defined array.

6. Write a program to find the maximum value in a user-defined array using the 'limits.h' library functions.

7. Write a program to find the minimum value in a user-defined array.

8. Write a program to find the minimum value in a user-defined array using the 'limits.h' library functions.

9. Given an array of integers, perform the following operations:
   - Multiply all values at odd indices by 2
   - Increment all values at even indices by 10

10. Write a program to count the number of elements in an array that are greater than a given number x.

11. Write a program to calculate the difference between the sum of elements at even indices and, 
the sum of elements at odd indices in an array.

12. Write a program to find and count all pairs in an array whose sum equals a given target value.

13. Write a program to find and count all triplets in an array whose sum equals a given target value.

14. Write a program to store the first 'n' Fibonacci numbers in an array.

15. Write a program to find the second largest element in an array using various loop structures.

16. Write a program to find the second largest element in an array using only one loop.

17. Write a program to read array size and elements from the user, then display the array in reverse order.

18. Write a program to copy the contents of one array into another array in reverse order.

19. Write a program to swap two elements of an array.

20. Write a program to reverse an array in-place without using any additional array.

21. Write a program to check if an array is a palindrome.

22. Write a program to reverse a subarray between given start and end indices.

23. Write a program to perform a right rotation on an array using the reversal algorithm. 
The program should read array elements from the user and rotate the array 'r' times.

24. Write a program to check whether a given number is present in an array.

25. Write a program to find the missing number from an array containing numbers from 1 to 20.

26. Write a program to find a duplicate element in an integer array where all elements appear exactly twice, 
except one value that appears more than twice.

27. Write a program to find the unique number in an array where all elements appear exactly twice, 
except one value that appears only once.


# Practice Questions on 2D Arrays
=================================

1. Write a program to initialize every element of a 2D matrix with the value N, where the matrix dimensions (rows and columns) 
are provided by the user.

2. Find the sum of all elements in a given matrix of size n × m.

3. Write a program to add two matrices and print the resulting matrix.

4. Find the maximum element in a 2D array.

5. Find the minimum element and its position in a 2D array.

6. Write a program to calculate the sum of elements in a selected submatrix from a 2D array. The user inputs the matrix dimensions, 
the elements, and the submatrix range.

7. Write a program to find and print the row number that has the maximum sum in a given matrix.

8. Write a program to find the row with the maximum number of 1s in a binary matrix.

9. Write a program to print the transpose of a matrix.
   Example (rows = 2, cols = 3):
   Input Matrix:           Transpose Output:
   1   2   3               1   4
   4   5   6               2   5
                           3   6

10. Write a program to store the transpose of a matrix in another matrix. (LeetCode-867)

11. Write a program to transpose a square matrix (n × n) in-place. (LeetCode-867)
    Example (rows/cols = 3):
    Input Matrix:           Transposed Matrix:
    1   2   3               1   4   7
    4   5   6               2   5   8
    7   8   9               3   6   9

12. Write a program to rotate a square matrix by 90° clockwise and print the result. (LeetCode-48)
    Example (rows/cols = 3):
    Input Matrix:           90° Clockwise Rotated Matrix:
    1   2   3               7   4   1
    4   5   6               8   5   2
    7   8   9               9   6   3

13. Write a program to rotate a square matrix in-place by 90° clockwise. (LeetCode-48)

14. Write a program to rotate a square matrix 90° clockwise in-place using a while loop.

15. Write a program to multiply two matrices entered by the user.

16. Write a program to print a given matrix (n × m) in odd-indexed row-wise wave form.
    Example (numRows = 3, numCols = 4):
    Input Matrix:               Wave-printed Output:
    1   2   3   4               1   2   3   4
    5   6   7   8               8   7   6   5
    9   10  11  12              9   10  11  12

17. Write an in-place program to transform a given matrix (n × m) by reversing elements of every odd-indexed row.
    Example (rows = 3, cols = 4):
    Input Matrix:               Transformed Matrix:
    1   2   3   4               1   2   3   4
    5   6   7   8               8   7   6   5
    9   10  11  12              9   10  11  12

18. Write a program to print a given matrix (n × m) in even-indexed row-wise wave form.
    Example (rows = 3, cols = 4):
    Input Matrix:               Wave-printed Output:
    1   2   3   4               4   3   2   1           
    5   6   7   8               5   6   7   8
    9   10  11  12              12  11  10  9

19. Write an in-place program to transform a given matrix (n × m) by reversing elements of every even-indexed row.
    Example (rows = 3, cols = 4):
    Input Matrix:               Transformed Matrix:
    1   2   3   4               4   3   2   1           
    5   6   7   8               5   6   7   8
    9   10  11  12              12  11  10  9

20. Write a program to print a given matrix (n × m) in even-indexed column-wise wave form.
    Example (rows = 3, cols = 4):
    Input Matrix:               Wave-printed Output:
    1   2   3   4               9   5   1
    5   6   7   8               2   6   10
    9   10  11  12              11  7   3
                                4   8   12

21. Write a program to print a given matrix (n × m) in vertically flipped form (reverse the order of rows).
    Example (rows = 3, cols = 4):
    Input Matrix:               Output:
    1   2   3   4               9   10  11  12
    5   6   7   8               5   6   7   8
    9   10  11  12              1   2   3   4

22. Write an in-place program to transform a given matrix (n × m) by reversing the order of rows (vertical flip).
    Example (rows = 3, cols = 4):
    Input Matrix:               Transformed Matrix:
    1   2   3   4               9   10  11  12
    5   6   7   8               5   6   7   8
    9   10  11  12              1   2   3   4

23. Write an in-place program to transform a given square matrix (n × n) by reversing elements of every even-indexed column.
    Example (rows = 3, cols = 3):
    Input Matrix:               Transformed Matrix:
    1   2   3                   7   2   9
    4   5   6                   4   5   6
    7   8   9                   1   8   3

24. Write a program to print a given matrix (n × m) in odd-indexed column-wise wave form.
    Example (rows = 3, cols = 4):
    Input Matrix:               Wave-printed Output:
    1   2   3   4               4   8   12
    5   6   7   8               11  7   3
    9   10  11  12              2   6   10
                                9   5   1

25. Write an in-place program to transform a given square matrix (n × n) by reversing elements of every odd-indexed column.
    Example (rows = 4, cols = 4):
    Input Matrix:               Transformed Matrix:
    1   2   3   4               1   8   3   12
    5   6   7   8               5   6   7   8
    9   10  11  12              9   10  11  4
    13  14  15  16              13  2   15  16

26. Given an n × m matrix, print all elements of the matrix in spiral order. (LeetCode-54)
    Example (rows = 5, cols = 6):
    Input Matrix:                        
    1   2   3   4   5   6
    7   8   9   10  11  12
    13  14  15  16  17  18
    19  20  21  22  23  24
    25  26  27  28  29  30

    Output (spiral order):
    1 2 3 4 5 6 12 18 24 30 29 28 27 26 25 19 13 7 8 9 10 11 17 23 22 21 20 14 15 16

27. Given a positive integer n, generate a square (n × n) matrix filled with elements from 1 to n² in spiral order. (LeetCode-59)
    Example (n = 5):
    Generated Matrix:
    1   2   3   4   5           
    16  17  18  19  6
    15  24  25  20  7
    14  23  22  21  8
    13  12  11  10  9