# Practice Questions on 2D Arrays

1. Write a program to initialize every element of a 2D matrix with the value N, where the matrix dimensions (rows and columns) 
are provided by the user.

2. Find the sum of all elements in a given matrix of size n × m.

3. Write a program to add two matrices and print the resulting matrix.

4. Find the maximum element in a 2D array.

5. Find the minimum element and its position in a 2D array.

6. Write a program to calculate the sum of elements in a selected submatrix from a 2D array. The user inputs the matrix dimensions, 
the elements, and the submatrix range.

7. Write a program to find and print the row number that has the maximum sum in a given matrix.

8. Write a program to find the row with the maximum number of 1s in a binary matrix.

9. Write a program to print the transpose of a matrix.
   Example (rows = 2, cols = 3):
   Input Matrix:           Transpose Output:
   1   2   3               1   4
   4   5   6               2   5
                           3   6

10. Write a program to store the transpose of a matrix in another matrix. (LeetCode-867)

11. Write a program to transpose a square matrix (n × n) in-place. (LeetCode-867)
    Example (rows/cols = 3):
    Input Matrix:           Transposed Matrix:
    1   2   3               1   4   7
    4   5   6               2   5   8
    7   8   9               3   6   9

12. Write a program to rotate a square matrix by 90° clockwise and print the result. (LeetCode-48)
    Example (rows/cols = 3):
    Input Matrix:           90° Clockwise Rotated Matrix:
    1   2   3               7   4   1
    4   5   6               8   5   2
    7   8   9               9   6   3

13. Write a program to rotate a square matrix in-place by 90° clockwise. (LeetCode-48)

14. Write a program to rotate a square matrix 90° clockwise in-place using a while loop.

15. Write a program to multiply two matrices entered by the user.

16. Write a program to print a given matrix (n × m) in odd-indexed row-wise wave form.
    Example (numRows = 3, numCols = 4):
    Input Matrix:               Wave-printed Output:
    1   2   3   4               1   2   3   4
    5   6   7   8               8   7   6   5
    9   10  11  12              9   10  11  12

17. Write an in-place program to transform a given matrix (n × m) by reversing elements of every odd-indexed row.
    Example (rows = 3, cols = 4):
    Input Matrix:               Transformed Matrix:
    1   2   3   4               1   2   3   4
    5   6   7   8               8   7   6   5
    9   10  11  12              9   10  11  12

18. Write a program to print a given matrix (n × m) in even-indexed row-wise wave form.
    Example (rows = 3, cols = 4):
    Input Matrix:               Wave-printed Output:
    1   2   3   4               4   3   2   1           
    5   6   7   8               5   6   7   8
    9   10  11  12              12  11  10  9

19. Write an in-place program to transform a given matrix (n × m) by reversing elements of every even-indexed row.
    Example (rows = 3, cols = 4):
    Input Matrix:               Transformed Matrix:
    1   2   3   4               4   3   2   1           
    5   6   7   8               5   6   7   8
    9   10  11  12              12  11  10  9

20. Write a program to print a given matrix (n × m) in even-indexed column-wise wave form.
    Example (rows = 3, cols = 4):
    Input Matrix:               Wave-printed Output:
    1   2   3   4               9   5   1
    5   6   7   8               2   6   10
    9   10  11  12              11  7   3
                                4   8   12

21. Write a program to print a given matrix (n × m) in vertically flipped form (reverse the order of rows).
    Example (rows = 3, cols = 4):
    Input Matrix:               Output:
    1   2   3   4               9   10  11  12
    5   6   7   8               5   6   7   8
    9   10  11  12              1   2   3   4

22. Write an in-place program to transform a given matrix (n × m) by reversing the order of rows (vertical flip).
    Example (rows = 3, cols = 4):
    Input Matrix:               Transformed Matrix:
    1   2   3   4               9   10  11  12
    5   6   7   8               5   6   7   8
    9   10  11  12              1   2   3   4

23. Write an in-place program to transform a given square matrix (n × n) by reversing elements of every even-indexed column.
    Example (rows = 3, cols = 3):
    Input Matrix:               Transformed Matrix:
    1   2   3                   7   2   9
    4   5   6                   4   5   6
    7   8   9                   1   8   3

24. Write a program to print a given matrix (n × m) in odd-indexed column-wise wave form.
    Example (rows = 3, cols = 4):
    Input Matrix:               Wave-printed Output:
    1   2   3   4               4   8   12
    5   6   7   8               11  7   3
    9   10  11  12              2   6   10
                                9   5   1

25. Write an in-place program to transform a given square matrix (n × n) by reversing elements of every odd-indexed column.
    Example (rows = 4, cols = 4):
    Input Matrix:               Transformed Matrix:
    1   2   3   4               1   8   3   12
    5   6   7   8               5   6   7   8
    9   10  11  12              9   10  11  4
    13  14  15  16              13  2   15  16

26. Given an n × m matrix, print all elements of the matrix in spiral order. (LeetCode-54)
    Example (rows = 5, cols = 6):
    Input Matrix:                        
    1   2   3   4   5   6
    7   8   9   10  11  12
    13  14  15  16  17  18
    19  20  21  22  23  24
    25  26  27  28  29  30

    Output (spiral order):
    1 2 3 4 5 6 12 18 24 30 29 28 27 26 25 19 13 7 8 9 10 11 17 23 22 21 20 14 15 16

27. Given a positive integer n, generate a square (n × n) matrix filled with elements from 1 to n² in spiral order. (LeetCode-59)
    Example (n = 5):
    Generated Matrix:
    1   2   3   4   5           
    16  17  18  19  6
    15  24  25  20  7
    14  23  22  21  8
    13  12  11  10  9